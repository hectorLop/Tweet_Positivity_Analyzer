name: Deploy the Gradio application

on: 
  workflow_call:
    secrets: 
        AWS_ACCESS_KEY_ID:
          description: 'AWS access key'
          required: true
        AWS_SECRET_ACCESS_KEY:
          description: 'AWS secret access key'
          required: true
        AWS_REGION:
          description: 'AWS region'
          required: true
        ECR_REGISTRY:
          description: 'Frontend ECR registry'
          required: true

jobs:
  frontend_deployment:
    name: Frontend deploy
    runs-on: ubuntu-latest 
 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
              
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-frontend-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: twitter-frontend
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          IMAGE_TAG: latest
        run: |
          docker build -f web_app/frontend.Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
              --build-arg AWS_ACCESS_KEY_ID_ARG=$AWS_ACCESS_KEY_ID \
              --build-arg AWS_SECRET_ACCESS_KEY_ARG=$AWS_SECRET_ACCESS_KEY \
              --build-arg AWS_DEFAULT_REGION_ARG=$AWS_REGION .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition twitter-frontend-task --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: task-definition.json 
          container-name: frontend
          image: ${{ steps.build-frontend-image.outputs.image }}

      - name: Deploy Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: frontend
          cluster: twitter-cluster
          wait-for-service-stability: true
          force-new-deployment: true 